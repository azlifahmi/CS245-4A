#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>
#include <string.h>
#include <wiringPi.h>
#include <sys/types.h>

#define LED     0

int main(void)
{
    int listenfd = 0;
    int connfd = 0;
    struct sockaddr_in serv_addr;
    char sendBuff[1025];
    int numrv;

    listenfd = socket(AF_INET, SOCK_STREAM, 0);

    printf("Socket successed! \n");

    memset(&serv_addr, '0', sizeof(serv_addr));
    memset(sendBuff, '0', sizeof(sendBuff));

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
    serv_addr.sin_port = htons(5000);

    bind(listenfd, (struct sockaddr*)&serv_addr,sizeof(serv_addr));

    if(listen(listenfd, 10) == -1)
    {
        printf("Failed to listen\n");
        return -1;
    }

         while(1)
    {
        connfd = accept(listenfd, (struct sockaddr*)NULL ,NULL);


        FILE *fp = fopen("file.txt","rb");
        if(fp==NULL)
        {
            printf("File open error");
            return 1;
        }

	 while(1)
        {

            unsigned char buff[256]={0};
            int nread = fread(buff,1,256,fp);

            system("cat file.txt");



            if(nread > 0)
            {

                write(connfd, buff, nread);
                wiringPiSetup () ;
        pinMode (LED, OUTPUT) ;

        for (;;)
        {
        digitalWrite (LED, HIGH) ;
        delay (500) ;
        digitalWrite (LED, LOW) ;
        delay (500) ;
        }

	


            }


            if (nread < 256)
            {
                if (feof(fp))
                    printf("DATA UPDATED!\n");
                if (ferror(fp))
                    printf("Error reading\n");
                break;

                         }


        }

        close(connfd);
        sleep(1);

 }


    return 0;
}



